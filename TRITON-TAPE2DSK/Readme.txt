■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
■　トリトーン　テープ版をディスクから実行する　ツールセット　■
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
※要：RAM64KB
※ゲーム状態のセーブ・ロードはカセットテープが必要
※（カセットテープが使えない場合は、メモリセーブ・ロードで頑張る）

■ セット内容

TRITON.BAS	...BASIC上からローダーを実行する
TRITREAD.BIN ...TRITON.BASで使用するマシン語バイナリ

extract_cas.exe ... CASファイルから個別のファイルを取り出すツール

*ソースファイル
TRITREAD.ASM ...マシン語部分ソースファイル（メイン）
FILEIO.ASM ...マシン語部分ソースファイル（ファイルアクセス系）
CHGSLT.ASM ...マシン語部分ソースファイル（スロット変更：ページ0切り替えのため）

*おまけ
TRIREAD_v0.ASM ... 旧版（遅い）：マシン語部分ソースファイル（メイン）
TRIOLD.BAS ... 旧版（遅い）：BASICからローダーを実行する
TRIOLD.BIN ...旧版（遅い）：TRITON.BASで使用するマシン語バイナリ

■ データの準備

①テープの音をWAVファイルに保存
②なんでもピーガーかMSX CasToolsでWAVファイルからCASファイルに変換
③extract_cas.exeでCASファイルの中身を取り出す
	（TRITON.BIN、custom_0.DATが取り出せる）
④custom_0.DATをGAMEDATA.DATにリネーム
⑤TRITON.BAS、TRITREAD.BIN、TRITON.BIN、GAMEDATA.DATをディスク（イメージ）に保存

■ 使い方：

MSX DISK BASIC上から
RUN"TRITON.BAS"

■ 懸念事項

8000hから8620hあたりをローダープログラム（BASIC+マシン語）で使用しているため、
トリトーンテープ版がその範囲が00やFFhでクリアされていることを期待した処理だった場合に、何処かで問題が出るかもしれません。

ROM版にはMSX2以降だとラスボスで停止するバグがあるので、少し心配です。
https://www.msx.org/ja/news/software/ja/tritorn-fix-rom-torito-n-bagu-patuti
→ ”具体的にはE453hの内容の下一桁がFhだとエラーが起きるようです。”

■ その他

マシン語ファイルは、tniASMで、TRITREAD.ASMをアセンブルしています。
http://www.tni.nl/products/tniasm.html

extract_cas.exeのソースファイルはこちらです。
https://app.box.com/s/vv0jxijfad0ld43356djvty5b6xpq8pv

■ その他解説

マシン語部分は、
GAMEDATA.DATをディスクから読み込みRAMの2000h～7FFFhへ転送し
TRITON.BINの最後のテープリード処理を書き換えて
RAMの2000h～7FFFhに読み込み済みのGAMEDATA.DATを8800hへ転送&実行します。

この時、スロットページ0（0000h～3FFFhの空間）をスロット切り替えしますが、
BIOSのENASLTはページ0にあるのでページ0のスロットを切り替えた瞬間に暴走します。
そのため、ENASLTと同等の処理を自前で用意して、
ページ2にスロット切り替えプログラムを配置実行しています。
(CHGSLT.ASMがENASLTクローンコードになります)

（※注：拡張スロットを操作する際、ページ3を一時的に切り替えるため、ページ3にスロット切り替えプログラムを配置した場合も暴走します）

■ おまけについて

ENASLT（の同等処理）でスロット切り替えして一気に転送するのではなく、
1バイトずつWRSLT/RDSLTで転送する実験バージョンです。

非常に遅いので、なんとなくテープ版の気分が味わえます。

（※注：WRSLT/RDSLTはページ0をアクセスしても問題ありませんので楽ですがとても遅いです）


■■■■■■■■■■■■■■■■■■■■■■■■
トリトーン テープ版 解析
■■■■■■■■■■■■■■■■■■■■■■■■
ざっくりした解析情報

■■ BIN部分(BLOAD"CAS:",R)

$A000～$DAFF、開始$A000

・$A100から$A3D6までの$2D7bytesを$E900へコピー
（$A00E～$A0FFが空き領域）
（$A3AF～$A3D6がプログラム転送対象の空き領域）
（$A3D7～$A3FFが空き領域）
（$A400～$AFFFも空き領域？）
（$B000～がVRAM用データ）
（$DB00～$E8FFが未使用空き領域）
・$E900にジャンプ
・SPを$87FFに設定
・VRAMへデータ転送
・$EB0D：テープからカスタムデータ部分をリードして実行
	(元は$A30D～$A3AE)

転送されるのは$A3D6までなので、
テープリード処理の書き換えは、200bytesまでなら可能。
（オリジナルは162bytes）

■■ データ部分

+$0000：識別ヘッダ "KAJI.." 4B 41 4A 49 2E 2E
+$0006：$6000byte → $8800～$E7FFへ転送後、$8800から実行
+$6006：これ以降は余計なデータ。読み込まれない。

■■ 
参考：フリーエリアHIMEM(FC4AH)
MSX：仮想1ドライブ：$E47D
MSX：仮想2ドライブ：$DE67
