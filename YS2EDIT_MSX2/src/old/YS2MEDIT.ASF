EXPTBL: EQU 0FCC1H
ENASLT: EQU 0024H
;
BDOS: EQU 0F37DH ; BDOS function call
SETDTA: EQU 1AH ; BDOS SET DTA ADDRESS
RDABS: EQU 2FH ; BDOS READ SECTOR
WRABS: EQU 30H ; BDOS WRITE SECTOR
;
DEFER: EQU 64H ; BDOS (DOS2): SET ERROR RUTINE FOR DOS2 FUNC
DOSVER: EQU 6FH ; BDOS (DOS2): DOS VERSION
;
DISKVE: EQU 0F323H ; (DOS1): DISK ERROR RUTINE POINTER TO POINTER for DOS1 FUNC
;                 -> LD HL,(DISKVE):LD E,(HL):INC HL:LD D,(HL):EX DE,HL:JP (HL)
;                * for 0h - 30h cmd / DOS2 31h- func are use DEFER
PHYDIO: EQU 0144H ;or 0FFA7H/SECTOR R/W BIOS
;                * PHYDIO CAN'T USE IN DOS2
DSKID: EQU 0F9H ;2DD9ｾｸﾀｰ
DRVNO: EQU 0 ;DRIVE A
;
LMMM: EQU 090H ; 10010000B  LOGICAL MOVE VRAM TO VRAM
TIMP: EQU 008H ; 1000B   LOGICAL OPARATION
;
VWORK: EQU 0D600H ; X,Y,PT*64,Length (0:256byte)
;                / SECTOR No+Cy*800H,Read Count,DMA Address H(**00h)
;
;; for tniasm
; FNAME "YS2MEDIT.BIN"
;;	BSAVE HEADER
;	ORG	0
;	DB	0FEH
;	DW	START
;	DW	ENDFL
;	DW	START
;;
;
 NAME YS2MEDIT
;
;--- SECTOR READ/WRITE on BASIC ----------------------------
; DEFUSR1=&HD604+3
; VWORK=SECTOR No.+WRITE Flag*800H,Read Count,DMA High(**00h)
; A=USR1(0)
;-----------------------------------------------------------
;---- 1 ﾓｼﾞ PUT on BASIC -----------------------------------
; DEFUSR=&HD604
; VWORK=X,Y,CHARA OFFSET(PATERN*64),DATAﾉ ｶｽﾞ
; U$=USR(A$)   * 'A$' ﾊ ﾌﾞﾝｼｮｳ ﾉ ﾍﾝｽｳ
; U=USR(A$)   * AD=DATA ADDRESS
;-----------------------------------------------------------
 ORG VWORK+4
START: ;
 JP PUTMJ
 JP RWSECT2
; JP RWSECT1
;
;;*** SECTOR READ/WRITE ***
;;  A=USR1(0)
;--- NEW VER (BDOS)
;CHANGE ERROR HOOK
RWSECT2: ;
 CALL CHGDSKVE ; BACKUP DISKVE & SET MY RUTINE
;SET DTA
 LD DE,(VWORK+2) ;D=DTA HIGH
 LD E,0 ;E=DTA LOW=0
 LD C,SETDTA ; CMD=SETDTA
 CALL BDOS ; BDOS:SETDTA
;READ/WRITE SECTOR
 LD HL,(VWORK+2)
 LD H,L ;H=COUNT
 LD L,DRVNO ;L=DRIVE NO
 LD DE,(VWORK) ;DE=SECTOR
 LD A,D
 AND 15
 LD D,A
 AND 7
 CP D ;bit3=1 > Cy SET=WRITE
 LD D,A ;DE = 000 - 7FF
 LD A,RDABS ; CMD=READ SECTOR
 ADC A,0 ; CY=1 -> CMD=WRITE SECTOR
 LD C,A ; C=BDOS CMD
 LD (DSKSPB),SP ;BACKUP SP
 XOR A
 LD (VWORK),A ;CLEAR DISK ERROR CODE
 CALL BDOS ; BDOS:RDABS/WRABS
RWSC2_E: ;
 LD SP,(DSKSPB) ;RESTORE SP
 PUSH AF ;A=RET VAL
 CALL RSTDSKVE ;RESTORE DISKVE
 POP AF ;A=RET VAL
;RETURN RESULT
 LD C,A ;C=RET VAL
 LD A,(VWORK) ; WAS HOOKED ERROR
 OR A
 RET NZ ; ERROR END/ ERROR CODE HAS BEEN SET
 LD A,C ;A=RET VAL
 OR A
 RET Z ; NO ERROR
 LD (VWORK),A ; ERROR CODE
 RET
;
;------------
; DOS DISK ERROR
DSKERR: ;
 LD A,(DOSKVER+1)
 CP 2 ; DOS VER CHECK
 LD A,C
 LD (VWORK),A ;RETURN THE ERROR CODE
 JR NC,DSIGNODE ; DOS2 = FORCE IGNORE
 CP 0AH ; unsupported media type
 JR Z,DSABORT
 AND 0FEH ; WRITE BIT CLEAR
 CP 80H ; bad fat
 JR Z,DSABORT
DSIGNODE: ;
 LD HL,V_IGNORE
 LD C,(HL) ; IGNORE
 RET
DSABORT: ;
; LD HL,V_ABORT ; IN BASIC : ABORT -> RESET = NG
; LD C,(HL) ; ABORT
; RET
;- FORCE ABORT
 LD A,(EXPTBL) ; ROM SLOT
 LD H,40H ;PAGE 1
 CALL ENASLT ;CHANGE PAGE 1 TO ROM
 EI
 LD A,(VWORK) ; A=ERROR VALUE
 JP RWSC2_E ;NOT RETURN TO DOS PROSSESS(FORCE ABORT)
;;------------
;; (DOS2) DOS DISK ERROR
;; RDABS/WRABSｶﾗﾊ ﾖﾊﾞﾚﾅｲ
;DSKERR2: ;
; CP 0F0H
; JR NC,DSKER2_1
; LD A,0CH ; OTHER ERROR
; JR DSKER2_E
;DSKER2_1: ;
; CPL ; FF->0 FE->1 ...
; LD HL,DSERTBL
; ADD A,L
; LD L,A
; LD A,H
; ADC A,0
; LD H,A
; LD (HL),A ; DOS2 -> DOS1 ERROR
;DSKER2_E: ;
; BIT 0,C ; WRITE
; ADC A,0 ; BIT0 = WRITE
; LD (VWORK),A ;RETURN THE ERROR CODE
; BIT 1,C ; NO IGNORE
; LD A,1 ; ABORT
; RET NZ
; LD A,3 ; IGNORE
; RET
;DSERTBL: ; DOS2 ERROR -> DOS1
; DB 0AH ;0FFH	.NCOMP	Incompatible disk	このディスクは使用できません
; DB 0AH ;0FEH	.WRERR	Write error	書き込み異常です
; DB 0CH ;0FDH	.DISK	Disk error	ディスクが異常です
; DB 02H ;0FCH	.NRDY	Not ready	ディスクが入っていません
; DB 04H ;0FBH	.VERFY	Verify error	正しく書き込まれませんでした
; DB 04H ;0FAH	.DATA	Data error	ディスクのデータが異常です
; DB 06H ;0F9H	.RNF	Sector not found	セクターが見つかりません
; DB 00H ;0F8H	.WPROT	Write protected disk	ディスクが書き込み保護されています
; DB 0AH ;0F7H	.UFORM	Unformatted disk	ディスクがフォーマットされていません
; DB 0AH ;0F6H	.NDOS	Not a DOS disk	MSX-DOSディスクではありません
; DB 0CH ;0F5H	.WDISK	Wrong disk	ディスクが違います
; DB 0CH ;0F4H	.WFILE	Wrong disk for file	このファイル用のディスクではありません
; DB 06H ;0F3H	.SEEK	Seek error	シークエラーです
; DB 80H ;0F2H	.IFAT	Bad file allocation table	FAT異常です
; DB 0CH ;0F1H	.NOUPB		
; DB 0AH ;0F0H	.IFORM	Cannot format this drive	このドライブはフォーマットできません
;
;------------
; BACKUP DISKVE & SET MY RUTINE
CHGDSKVE: ;
 CALL DVERCHK
; CALL NC,CHGDSKVE2 ;JR -> CALL = DOS2+DOS1 TRAP
 LD HL,(DISKVE)
 EX DE,HL
 LD HL,DSKVEB
 LD (HL),E
 INC HL
 LD (HL),D ;BACKUP DISKVE
 LD DE,DSKERP
 LD HL,DISKVE
 LD (HL),E
 INC HL
 LD (HL),D ;CHANGE ERROR RUTINE
 RET
;; (DOS2) BACKUP DISKVE & SET MY RUTINE
;CHGDSKVE2: ;
; LD DE,DSKERR2 ; DE=ERROR RUTINE
; LD C,DEFER ; C=SET FEROR RUTINE
; CALL BDOS
; RET
;------------
; RESTORE DISKVE
RSTDSKVE: ;
 CALL DVERCHK
; CALL NC,RSTDSKVE2 ;JR -> CALL = DOS2+DOS1 TRAP
 LD HL,(DSKVEB)
 EX DE,HL
 LD HL,DISKVE
 LD (HL),E
 INC HL
 LD (HL),D ;RESTORE DISKVE
 RET
; (DOS2) RESTORE DISKVE
;RSTDSKVE2: ;
; LD DE,0 ; DE=ERROR RUTINE (RESET)
; LD C,DEFER ; C=SET FEROR RUTINE
; CALL BDOS
; RET
;
DSKERP: DW DSKERR
DSKVEB: DW 0 ; DISKVE BACKUP
DSKSPB: DW 0 ; SP BACKUP
;
;------------
; DOS VERSION CHECK
DVERCHK: ;
 LD BC,0
 LD (DOSKVER),BC
 LD (DOS2VER),BC
 LD C,DOSVER  ; BC=DOS KERNEL VER (BCD)
 CALL BDOS ;
 OR A
 RET NZ ; NOT DOS
 LD (DOSKVER),BC
 LD (DOS2VER),DE
 LD A,B
 CP 2 ; DOS1 = Cy=1
 RET C
 LD A,3 ; ｴｲｷｭｳﾘﾄﾗｲ ｶｲﾋ (BASIC ON ERRORｦﾂｶｳｺﾄ)
 LD (V_ABORT),A
 LD (V_RETRY),A
 LD (V_IGNORE),A
 RET
DOSKVER: DW 0 ; DOS1:01??H / DOS2:02??H
DOS2VER: DW 0 ; ONLY FOR DOS2
V_ABORT: DB 2 ; ABORT (DOS1)
V_RETRY: DB 1 ; RETRY (DOS1)
V_IGNORE: DB 0 ; IGNORE (DOS1)
;
;DSKERC: DB 0
;
;;*** SECTOR READ/WRITE ***
;;  A=USR1(0)
;;--- OLD VER (PHYDIO)
;RWSECT1: ;
; LD HL,(VWORK+2) ;H=(VWORK+3)
; LD L,0 ;L=00  :HL=DMA (**00h)
; LD C,DSKID
; LD DE,(VWORK)
; LD A,(VWORK+2)
; LD B,A
; LD A,D
; AND 15
; LD D,A
; AND 7
; CP D ;bit3=1 > Cy SET=WRITE
; LD D,A ; DE = 000 - 7FF
; LD A,DRVNO
; CALL PHYDIO
; RLA ;A=ｴﾗｰCODE*2+Cy
; RRCA ;A=ｴﾗｰCODE+Cy*80h
; LD (VWORK),A ;RETURN THE ERROR CODE
; RET
;
;*** (LOGICAL MOVE VRAM to VRAM) ***
PUTMJ: DI
 CP 3
 JP Z,AMOJI ;A=3:ﾓｼﾞ ﾋｷｽｳ
 LD HL,(0F7F8H) ;U=USR(AD)
 LD A,(VWORK+3)
 LD B,A ;DATAｽｳ
 JR LOOPVP
AMOJI: LD A,(DE) ;U$=USR(A$)
 LD B,A ;B=ﾓｼﾞ ｽｳ
 INC DE
 LD A,(DE)
 LD L,A
 INC DE
 LD A,(DE)
 LD H,A ;HL=ﾓｼﾞﾉ ｱﾙ ADDRESS
LOOPVP: LD A,32 ;A=ｺﾏﾝﾄﾞ ﾚｼﾞｽﾀｰ ﾉ ﾊｼﾞﾒ
 OUT (99H),A ;VDP PORT ﾆ OUTPUT
 LD A,17+80H ;A=ｶﾝｾﾂｼﾃｲ ﾚｼﾞｽﾀｰ
 OUT (99H),A
 LD C,9BH ;C=ｶﾝｾﾂ ｼﾃｲ PORT
 LD A,(HL) ;A=CHARACTOR CORD
 LD D,A
 AND 0E0H
 SRL A
 SRL A
 LD E,A
 LD A,(VWORK+2) ;CHRACTER CHANGE +64 OR 0
 ADD A,E
 LD E,A ;E=SY
 LD A,D
 RLA
 RLA
 RLA
 AND 0F8H ;A=SX
 OUT (C),A ;SX
 XOR A
 OUT (C),A
 OUT (C),E ;SY
 LD A,1 ;PAGE 1
 OUT (C),A
 LD A,(VWORK) ;A=DX
 OUT (C),A
 XOR A
 OUT (C),A
 LD A,(VWORK+1) ;A=DY
 OUT (C),A
 XOR A ;(A=0)
 OUT (C),A
 LD E,8 ;E=NX&NY
 OUT (C),E ;NX
 OUT (C),A
 OUT (C),E ;NY
 OUT (C),A
 OUT (C),A ;CLR ﾄﾊﾞｽ
 OUT (C),A ;ARG=0
 LD A,LMMM+TIMP
 OUT (C),A ;VDP COMMAND START
 LD DE,VWORK
 LD A,(DE)
 ADD A,8
 LD (DE),A
 JR NZ,NONYI
 INC DE
 LD A,(DE)
 ADD A,9
 LD (DE),A
 JR C,RETBAS
NONYI: INC HL
 LD A,2
 OUT (99H),A
 LD A,15+80H ;R#15 ﾆ S#2 SET
 OUT (99H),A
WAIT: IN A,(99H) ;A=S#2
 RRA ;Cy=CE bit
 JP C,WAIT
 DJNZ LOOPVP
RETBAS: XOR A
 OUT (99H),A
 LD A,15+80H ;R#15 ﾆ S#0 SET
 OUT (99H),A
 EI
 RET
;
ENDFL: DB 0
