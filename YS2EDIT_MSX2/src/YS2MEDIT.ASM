EXPTBL:	EQU	0FCC1H	; MAIN ROM SLOT/PAGE0 EXPAND FLAG
ENASLT:	EQU	0024H	; CHANGE SLOT
;
BDOS:	EQU	0F37DH	; BDOS function call
SETDTA:	EQU	1AH	; BDOS SET DTA ADDRESS
RDABS:	EQU	2FH	; BDOS READ SECTOR
WRABS:	EQU	30H	; BDOS WRITE SECTOR
;
DEFER:	EQU	64H	; BDOS (DOS2): SET ERROR RUTINE FOR DOS2 FUNC
DOSVER:	EQU	6FH	; BDOS (DOS2): DOS VERSION
;
DISKVE:	EQU	0F323H	; (DOS1): DISK ERROR RUTINE POINTER TO POINTER for DOS1 FUNC
; 				  -> LD HL,(DISKVE):LD E,(HL):INC HL:LD D,(HL):EX DE,HL:JP (HL)
;				  * for 0h - 30h cmd / DOS2 31h- func are use DEFER
PHYDIO:	EQU	0144H	;or 0FFA7H/SECTOR R/W BIOS
; 			            * PHYDIO CAN'T USE IN DOS2
DSKID:	EQU	0F9H	;2DD9ｾｸﾀｰ
DRVNO:	EQU	0	;DRIVE A
;
LMMM:	EQU	090H	; 10010000B  LOGICAL MOVE VRAM TO VRAM
TIMP:	EQU	008H	; 1000B   LOGICAL OPARATION
;
VWORK:	EQU	0D600H	; X,Y,PT*64,Length (0:256byte)
;			/ SECTOR No+Cy*800H,Read Count,DMA Address H(**00h)
;
 FNAME	"YS2MEDIT.BIN"	;*BINHEAD*
;	BSAVE HEADER
	DB	0FEH	;*BINHEAD*
	DW	ORGADR	;*BINHEAD*
	DW	ENDFL	;*BINHEAD*
	DW	SETUP	;*BINHEAD*
;
ORGADR:	EQU	VWORK-256
	ORG	ORGADR
;
DSTART:	; CHR CODE TABLE : 256bytes
	DB	000H,001H,002H,003H,004H,005H,006H,007H,008H,009H,00AH,00BH,00CH,00DH,00EH,00FH
	DB	010H,011H,012H,013H,014H,015H,016H,017H,018H,019H,01AH,01BH,01CH,01DH,01EH,01FH
	DB	020H,021H,022H,023H,024H,025H,026H,027H,028H,029H,02AH,02BH,02CH,02DH,02EH,02FH
	DB	030H,031H,032H,033H,034H,035H,036H,037H,038H,039H,03AH,03BH,03CH,03DH,03EH,03FH
	DB	040H,041H,042H,043H,044H,045H,046H,047H,048H,049H,04AH,04BH,04CH,04DH,04EH,04FH
	DB	050H,051H,052H,053H,054H,055H,056H,057H,058H,059H,05AH,05BH,05CH,05DH,05EH,05FH
	DB	060H,061H,062H,063H,064H,065H,066H,067H,068H,069H,06AH,06BH,06CH,06DH,06EH,06FH
	DB	070H,071H,072H,073H,074H,075H,076H,077H,078H,079H,07AH,07BH,07CH,07DH,07EH,07FH
	DB	080H,081H,082H,083H,084H,085H,086H,087H,088H,089H,08AH,08BH,08CH,08DH,08EH,08FH
	DB	090H,091H,092H,093H,094H,095H,096H,097H,098H,099H,09AH,09BH,09CH,09DH,09EH,09FH
	DB	0A0H,0A1H,0A2H,0A3H,0A4H,0A5H,0A6H,0A7H,0A8H,0A9H,0AAH,0ABH,0ACH,0ADH,0AEH,0AFH
	DB	0B0H,0B1H,0B2H,0B3H,0B4H,0B5H,0B6H,0B7H,0B8H,0B9H,0BAH,0BBH,0BCH,0BDH,0BEH,0BFH
	DB	0C0H,0C1H,0C2H,0C3H,0C4H,0C5H,0C6H,0C7H,0C8H,0C9H,0CAH,0CBH,0CCH,0CDH,0CEH,0CFH
	DB	0D0H,0D1H,0D2H,0D3H,0D4H,0D5H,0D6H,0D7H,0D8H,0D9H,0DAH,0DBH,0DCH,0DDH,0DEH,0DFH
	DB	0E0H,0E1H,0E2H,0E3H,0E4H,0E5H,0E6H,0E7H,0E8H,0E9H,0EAH,0EBH,0ECH,0EDH,0EEH,0EFH
	DB	0F0H,0F1H,0F2H,0F3H,0F4H,0F5H,0F6H,0F7H,0F8H,0F9H,0FAH,0FBH,0FCH,0FDH,0FEH,0FFH
;
;VWORK:	; I/O WORK "BASIC <-> MACHINE CODE FUNC"
	DW 	0,0		; 4bytes
;
;--- SECTOR READ/WRITEon BASIC ----------------------------
; DEFUSR1=&HD604+3
; VWORK=SECTOR No.+WRITE Flag*800H,Read Count,DMA High(**00h)
; A=USR1(0)
;-----------------------------------------------------------
;---- 1ﾓｼﾞPUT on BASIC -----------------------------------
; DEFUSR=&HD604
; VWORK=X,Y,CHARA OFFSET(PATERN*64),DATAﾉ ｶｽﾞ
; U$=USR(A$) * 'A$' ﾊ ﾌﾞﾝｼｮｳ ﾉ ﾍﾝｽｳ
; U=USR(A$)  * AD=DATA ADDRESS
;-----------------------------------------------------------
;	ORG	VWORK+4
START:	;
	JP	PUTMJ
	JP	RWSECT2	;BDOS CALL
	JP	RWSECT1	;PHYDIO
;
;--- INITIALIZE
SETUP:	;
;--- VDP PORT ﾎｿﾞﾝ
	LD	A,(0006H)
	INC	A
	LD	(VDPGPR),A	;A=99H=VDP REG PORT (READ)
	LD	A,(0007H)
	INC	A
	LD	(VDPGPW),A	;A=99H=VDP REG PORT (WRITE)
	LD	HL,DSTART
;;--- 0ｶﾗ255ｦ ｶｷｺﾑ
;	XOR	A
;SETUP_L:	;
;	LD	(HL),A
;	INC	HL
;	INC	A
;	OR	A
;	JR	NZ,SETUP_L
;				-> DBﾃﾞ ﾃｲｷﾞ ｽﾞﾐ
	RET
;
;;*** SECTOR READ/WRITE ***
;; A=USR1(0)
;--- NEW VER (BDOS)
;CHANGE ERROR HOOK
RWSECT2:	;
	CALL	CHGDSKVE	; BACKUP DISKVE & SET MY RUTINE
;SET DTA
	LD	DE,(VWORK+2)	;D=DTA HIGH
	LD	E,0		;E=DTA LOW=0
	LD	C,SETDTA	;CMD=SETDTA
	CALL	BDOS		;BDOS:SETDTA
;READ/WRITE SECTOR
	LD	HL,(VWORK+2)
	LD	H,L		;H=COUNT
	LD	L,DRVNO		;L=DRIVE NO
	LD	DE,(VWORK)	;DE=SECTOR
	LD	A,D
	AND	15
	LD	D,A
	AND	7
	CP	D		;bit3=1 > Cy SET=WRITE
	LD	D,A		;DE = 000 - 7FF
	LD	A,RDABS		;CMD=READ SECTOR
	ADC	A,0		;CY=1 -> CMD=WRITE SECTOR
	LD	C,A		; C=BDOS CMD
	LD	(DSKSPB),SP	;BACKUP SP
	XOR	A
	LD	(VWORK),A	;CLEAR DISK ERROR CODE
	CALL	BDOS		; BDOS:RDABS/WRABS
RWSC2_E:	;
	LD	SP,(DSKSPB)	;RESTORE SP
	PUSH	AF		;A=RET VAL
	CALL	RSTDSKVE	;RESTORE DISKVE
	POP	AF		;A=RET VAL
;RETURN	RESULT
	LD	C,A		;C=RET VAL
	LD	A,(VWORK)	;ERROR HOOK WAS CALLEN?
	OR	A
	RET	NZ		; ERROR END/ ERROR CODE HAS BEEN SET
	LD	A,C		;A=RET VAL
	OR	A
	RET	Z		; NO ERROR
	LD	(VWORK),A	; ERROR CODE
	RET
;
;------------
; DOS DISK ERROR
DSKERR:	;
	LD	A,(DOSKVER+1)
	CP	2		; DOS VER CHECK
	LD	A,C
	LD	(VWORK),A	;RETURN THE ERROR CODE
	JR	NC,DSIGNODE	; DOS2 = FORCE IGNORE
	CP	0AH		; unsupported media type
	JR	Z,DSABORT
	AND	0FEH		; WRITE BIT CLEAR
	CP	80H		; bad fat
	JR	Z,DSABORT
DSIGNODE:	;
	LD	HL,V_IGNORE
	LD	C,(HL)		; IGNORE
	RET
DSABORT:	;
; LD	HL,V_ABORT		; on BASIC: ABORT -> RESET = NG
; LD	C,(HL)	; ABORT
; RET
;-	FORCE	ABORT
	LD	A,(EXPTBL)	; ROM SLOT
	LD	H,40H		;PAGE 1
	CALL	ENASLT		;CHANGE PAGE 1 TO ROM
	EI
	LD	A,(VWORK)	; A=ERROR VALUE
	JP	RWSC2_E		;NOT RETURN TO DOS PROSSESS(FORCE ABORT)
;;------------
;; (DOS2) DOS DISK ERROR
;; RDABS/WRABSｶﾗﾊ ﾖﾊﾞﾚﾅｲ
;DSKERR2:	;
;	CP	0F0H
;	JR	NC,DSKER2_1
;	LD	A,0CH		; OTHER	ERROR
;	JR	DSKER2_E
;DSKER2_1:	;
;	CPL	; FF->0, FE->1, ...
;	LD	HL,DSERTBL
;	ADD	A,L
;	LD	L,A
;	LD	A,H
;	ADC	A,0
;	LD	H,A
;	LD	(HL),A		; DOS2 -> DOS1 ERROR
;DSKER2_E:	;
;	BIT	0,C		; WRITE
;	ADC	A,0		; BIT0	= WRITE
;	LD	(VWORK),A	;RETURN	THE ERROR CODE
;	BIT	1,C		; NO	IGNORE
;	LD	A,1		; ABORT
;	RET	NZ
;	LD	A,3		; IGNORE
;	RET
;DSERTBL:	; DOS2 ERROR -> DOS1
;	DB	0AH		;0FFH .NCOMP Incompatible disk このディスクは使用できません
;	DB	0AH		;0FEH .WRERR Write error 書き込み異常です
;	DB	0CH		;0FDH .DISK Disk error ディスクが異常です
;	DB	02H		;0FCH .NRDY Not ready ディスクが入っていません
;	DB	04H		;0FBH .VERFY Verify error 正しく書き込まれませんでした
;	DB	04H		;0FAH .DATA Data error ディスクのデータが異常です
;	DB	06H		;0F9H .RNF Sector not found セクターが見つかりません
;	DB	00H		;0F8H .WPROT Write protected disk ディスクが書き込み保護されています
;	DB	0AH		;0F7H .UFORM Unformatted disk ディスクがフォーマットされていません
;	DB	0AH		;0F6H .NDOS Not a DOS disk MSX-DOSディスクではありません
;	DB	0CH		;0F5H .WDISK Wrong disk ディスクが違います
;	DB	0CH		;0F4H .WFILE Wrong disk for file このファイル用のディスクではありません
;	DB	06H		;0F3H .SEEK Seek error シークエラーです
;	DB	80H		;0F2H .IFAT Bad file allocation table FAT異常です
;	DB	0CH		;0F1H .NOUPB
;	DB	0AH		;0F0H .IFORM Cannot format this drive このドライブはフォーマットできません
;
;------------
; BACKUP DISKVE & SET MY RUTINE
CHGDSKVE:	;
	CALL	DVERCHK
;	CALL	NC,CHGDSKVE2	;JR -> CALL = DOS2+DOS1 TRAP
	LD	HL,(DISKVE)
	EX	DE,HL
	LD	HL,DSKVEB
	LD	(HL),E
	INC	HL
	LD	(HL),D		;BACKUP DISKVE
	LD	DE,DSKERP
	LD	HL,DISKVE
	LD	(HL),E
	INC	HL
	LD	(HL),D		;CHANGE ERROR RUTINE
	RET
;; (DOS2) BACKUP DISKVE & SET MY RUTINE
;CHGDSKVE2:	;
;	LD	DE,DSKERR2	; DE=ERROR RUTINE
;	LD	C,DEFER		; C=SET FEROR RUTINE
;	CALL	BDOS
;	RET
;------------
; RESTORE DISKVE
RSTDSKVE:	;
	CALL	DVERCHK
;	CALL	NC,RSTDSKVE2	;JR -> CALL = DOS2+DOS1 TRAP
	LD	HL,(DSKVEB)
	EX	DE,HL
	LD	HL,DISKVE
	LD	(HL),E
	INC	HL
	LD	(HL),D		;RESTORE DISKVE
	RET
; (DOS2) RESTORE DISKVE
;RSTDSKVE2:	;
;	LD	DE,0		; DE=ERROR RUTINE (RESET)
;	LD	C,DEFER		; C=SET FEROR RUTINE
;	CALL	BDOS
;	RET
;
DSKERP:	DW	DSKERR
DSKVEB:	DW	0		; DISKVE BACKUP
DSKSPB:	DW	0		; SP BACKUP
;
;------------
; DOS VERSION CHECK
DVERCHK:	;
	LD	BC,0
	LD	(DOSKVER),BC
	LD	(DOS2VER),BC
	LD	C,DOSVER	; BC=DOS KERNEL VER (BCD)
	CALL	BDOS		;
	OR	A
	RET	NZ		; NOT DOS
	LD	(DOSKVER),BC
	LD	(DOS2VER),DE
	LD	A,B
	CP	2		; DOS1 = Cy=1
	RET	C
	LD	A,3		; ｴｲｷｭｳﾘﾄﾗｲ ｶｲﾋ (BASIC ON ERRORｦﾂｶｳｺﾄ)
	LD	(V_ABORT),A
	LD	(V_RETRY),A
	LD	(V_IGNORE),A
	RET
DOSKVER:	DW	0	; DOS1:01??H / DOS2:02??H
DOS2VER:	DW	0	; ONLY FOR DOS2
V_ABORT:	DB	2	; ABORT (DOS1)
V_RETRY:	DB	1	; RETRY (DOS1)
V_IGNORE:	DB	0	; IGNORE (DOS1)
;
;DSKERC:	DB	0
;
;*** SECTOR READ/WRITE ***
; A=USR1(0)
;--- OLD VER (PHYDIO)(DOS1 ONLY)
RWSECT1:	;
	LD	HL,(VWORK+2)	;H=(VWORK+3)
	LD	L,0		;L=00 :HL=DMA (**00h)
	LD	C,DSKID
	LD	DE,(VWORK)
	PUSH	DE		;DE=SECTOR+W*800H
	LD	A,(VWORK+2)
	LD	B,A
	LD	A,D
	AND	15
	LD	D,A
	AND	7
	CP	D		;bit3=1 > Cy SET=WRITE
	LD	D,A		;DE = 000 - 7FF
	LD	A,DRVNO
	CALL	PHYDIO
	POP	DE		;DE=SECTOR+W*800H
	JR	NC,RWSECT1E	;NO ERROR
	LD	C,A		;C=ERROR CODE
	LD	A,07H
	CP	D		;CY = (DE >= 0800H) = WRITE
	LD	A,0
	ADC	A,C		;ERROR CODE -> IF WRITE THEN SET BIT0
RWSECT1E:	;
	LD	(VWORK),A	;RETURN ERROR CODE
	RET
;
;*** (LOGICAL MOVE VRAM to VRAM) ***
PUTMJ:	DI
; -> MOVE TO "SETUP"
;	PUSH	AF
;	LD	A,(0006H)
;	INC	A
;	LD	(VDPGPR),A	;A=99H=VDP REG PORT (READ)
;	LD	A,(0007H)
;	INC	A
;	LD	(VDPGPW),A	;A=99H=VDP REG PORT (WRITE)
;	POP	AF
;
	CP	3
	JP	Z,AMOJI		;A=3:ﾓｼﾞ ﾋｷｽｳ
	LD	HL,(0F7F8H)	;U=USR(AD)
	LD	A,(VWORK+3)
	LD	B,A		;DATAｽｳ
	JR	LOOPVP
AMOJI:	LD	A,(DE)		;U$=USR(A$)
	LD	B,A		;B=ﾓｼﾞ ｽｳ
	INC	DE
	LD	A,(DE)
	LD	L,A
	INC	DE
	LD	A,(DE)
	LD	H,A		;HL=ﾓｼﾞﾉ ｱﾙ ADDRESS
LOOPVP:	LD	A,(VDPGPW)	;A=99H=VDP REG PORT (WRITE)
	LD	C,A		;C=99H
	LD	A,32		;A=ｺﾏﾝﾄﾞ ﾚｼﾞｽﾀｰ ﾉ ﾊｼﾞﾒ
	OUT	(C),A		;VDP PORT ﾆ OUTPUT
	LD	A,17+80H	;A=ｶﾝｾﾂｼﾃｲ ﾚｼﾞｽﾀｰ
	OUT	(C),A
	INC	C		;C=9AH
	INC	C		;C=9BH=ｶﾝｾﾂ ｼﾃｲ PORT
	LD	A,(HL)		;A=CHARACTOR CORD
	LD	D,A
	AND	0E0H
	SRL	A
	SRL	A
	LD	E,A
	LD	A,(VWORK+2)	;CHRACTER CHANGE +64 OR 0
	ADD	A,E
	LD	E,A		;E=SY
	LD	A,D
	RLA
	RLA
	RLA
	AND	0F8H		;A=SX
	OUT	(C),A		;SX
	LD	D,0		;D=0 + WAIT
	OUT	(C),D		;D=0
	OUT	(C),E		;SY
	LD	A,1		;PAGE 1
	OUT	(C),A
	LD	A,(VWORK)	;A=DX
	OUT	(C),A		; 11 STATE
	LD	A,(VWORK+1)	;A=DY + WAIT
	OUT	(C),D		;D=0
	OUT	(C),A		; 11 STATE
	LD	E,8		;E=NX&NY + WAIT
	OUT	(C),D		;D=0
	OUT	(C),E		;NX
	OUT	(C),D		;D=0
	OUT	(C),E		;NY
	OUT	(C),D		;D=0
	OUT	(C),D		;D=0 CLR ﾄﾊﾞｽ
	OUT	(C),D		;D=0 ARG=0
	LD	A,LMMM+TIMP
	OUT	(C),A		;VDP COMMAND START
	DEC	C		;C=9AH
	DEC	C		;C=99H
	LD	DE,VWORK
	LD	A,(DE)
	ADD	A,8
	LD	(DE),A
	JR	NZ,NONYI
	INC	DE
	LD	A,(DE)
	ADD	A,9
	LD	(DE),A
	JR	C,RETBAS
NONYI:	INC	HL
	LD	A,2
	OUT	(C),A		;C=99H
	LD	A,15+80H	;R#15 ﾆ S#2 SET
	OUT	(C),A
WAIT:	LD	A,(VDPGPR)	;A=99H=VDP REG PORT (READ)
	LD	C,A		;C=99H
	IN	A,(C)		;A=S#2
	RRA			;Cy=CE bit
	JP	C,WAIT
	DJNZ	LOOPVP
RETBAS:	LD	A,(VDPGPW)	;A=99H=VDP REG PORT (WRITE)
	LD	C,A		;C=99H
	XOR	A
	OUT	(C),A
	LD	A,15+80H	;R#15 ﾆ S#0 SET
	OUT	(C),A
	EI
	RET
VDPGPR:	DB	99H		;(0006H)+1
VDPGPW:	DB	99H		;(0007H)+1
;
ENDFL:	;
;
;;->MSX2ASM
;	END	SETUP		; EXECUTE ADDRESS-> BLOAD"YS2MEDIT.BIN",R
