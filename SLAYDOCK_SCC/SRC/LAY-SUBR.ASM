;=== _SAVE("LAY-SUBR

;=== RAM & VRAM SAVE ===
SAVE0:	LD	A,RAM0
	OUT	(MAP2),A	;8000H= PAGE0
; RAM(0000H-3FFFH)

	LD	A,7	;VRAM(1C000H-)
	LD	E,0	;(bit 14-8 of 0000-3F00H)
	CALL	VADR_W
	LD	HL,8000H	;sorce 8000H
	LD	BC,98H
	LD	A,40H	;size 4000H
L_SV0:	OTIR
	DEC	A
	JP	NZ,L_SV0

	LD	A,RAM2
	OUT	(MAP2),A	;8000H= PAGE2
SVLD_E:	XOR	A
	OUT	(99H),A
	LD	A,14+80H
	OUT	(99H),A
	RET

;== VRAM(0000H-4FFFH)
VSAVE0:	LD	DE,4000H
	LD	HL,0C000H	;BUFFER
L_VSV0:
;-(VRAM>RAM)READ
	XOR	A	;VRAM 0000H-
	CALL	VADR_R	;READ SET
	LD	BC,98H
	PUSH	HL
	INIR
	POP	HL
;-(RAM>VRAM)WRITE
	LD	A,6	;VRAM 18000H-
	CALL	VADR_W
	LD	BC,98H
	PUSH	HL
	OTIR
	POP	HL
	INC	E
	DEC	D
	JP	NZ,L_VSV0
	JP	SVLD_E
;=== VRAM LOAD (0000H-) ===
VLOAD0:	LD	DE,4000H
	LD	HL,0C000H	;BUFFER
L_VLD0:
;-(VRAM>RAM)READ
	LD	A,6	;VRAM 18000H-
	CALL	VADR_R	;READ SET
	LD	BC,98H
	PUSH	HL
	INIR
	POP	HL
;-(RAM>VRAM)WRITE
	XOR	A	;VRAM 0000H-
	CALL	VADR_W
	LD	BC,98H
	PUSH	HL
	OTIR
	POP	HL
	INC	E
	DEC	D
	JP	NZ,L_VLD0
	JP	SVLD_E

;=== VRAM CLEAR PAGE 0 ===
;VMENU_  LD    DE,1800H
;        LD    HL,256+256
;        LD    B,32H
;        CALL  FILVRM
;        RET
VMENU:	;CALL  VMENU_
	LD	DE,2000H
	LD	HL,0400H
	LD	B,0E1H	;moji color/haikei
	CALL	FILVRM
	LD	DE,2800H
	LD	HL,0400H
	CALL	FILVRM
	LD	DE,2180H
	LD	HL,50H
	LD	B,31H	;moji color/haikei
	CALL	FILVRM
	LD	DE,2980H
	LD	HL,50H
	CALL	FILVRM
	LD	DE,2208H
	LD	HL,0D0H
	LD	B,0F1H	;moji color/haikei
	CALL	FILVRM
	LD	DE,2A08H
	LD	HL,0D0H
	CALL	FILVRM
	XOR	A
	LD	DE,0000H
	CALL	FONTSET
	LD	DE,800H
	CALL	FONTSET

	LD	DE,2100H
	LD	HL,8
	LD	B,051H	;moji color/haikei
	CALL	FILVRM
	LD	DE,2900H
	LD	HL,8
	CALL	FILVRM
;       DI
	XOR	A
	OUT	(99H),A
	LD	A,1BH+40H
	OUT	(99H),A
;       EI
	LD	A,208
	OUT	(98H),A
	RET

FONTSET:	PUSH	DE
	CALL	VADR0_W
	LD	HL,(0F91FH+1)	;(ADDRESS)
	LD	BC,400H
	CALL	L_VMN
	LD	HL,308H
	POP	DE
	ADD	HL,DE
	EX	DE,HL
	CALL	VADR0_W
	LD	HL,(0F91FH+1)	;(ADRESS)
	LD	DE,208H
	ADD	HL,DE
	LD	BC,0D0H
	CALL	L_VMN

	RET

L_VMN:	LD	A,(HL)
	LD	D,A
	RRA
	AND	1FH
	LD	E,A
	LD	A,D
	AND	0E0H
	OR	E
	LD	D,A
	RRA
	OR	D
	OUT	(98H),A
	DEC	BC
	INC	HL
	LD	A,B
	OR	C
	JP	NZ,L_VMN
	RET


;=== set VRAM ADDRESS (sub) ===
VADR_R:	OUT	(99H),A
	LD	A,14+80H
	OUT	(99H),A
	XOR	A
	OUT	(99H),A
	LD	A,E
	AND	3FH
	OUT	(99H),A
	RET
VADR_W:	OUT	(99H),A
	LD	A,14+80H
	OUT	(99H),A
	XOR	A
	OUT	(99H),A
	LD	A,E
	AND	3FH
	OR	40H	;WRITE
	OUT	(99H),A
	RET

;=== FILL VRAM ==
VADR0_W:	LD	C,99H
; DI
	OUT	(C),E
	LD	A,D
	AND	3FH
	OR	40H
	OUT	(C),A
;EI
	DEC	C
	RET
FILVRM:	CALL	VADR0_W
L_FILV:	OUT	(C),B
	DEC	HL
	LD	A,H
	OR	L
	JP	NZ,L_FILV
	RET


;=== print strings ===
STR_PUT:	LD	A,(HL)
	INC	HL
	CP	ED
	RET	Z
	CP	LF
	JP	NZ,NLF
	INC	D
	JP	_LOCATE
NLF:	CP	CR
	JP	NZ,NCR
	LD	E,0
_LOCATE:	CALL	LOCATE
	JP	STR_PUT
NCR:	OUT	(98H),A
	JP	STR_PUT

LOCATE:	LD	A,D
	RRCA
	RRCA
	RRCA
	LD	B,A
	AND	0E0H
	OR	E
;       DI
	OUT	(99H),A
	LD	A,B
	AND	1FH
	ADD	A,18H
	OR	40H
	OUT	(99H),A
;       EI
	RET

;=== NUMBERPUT ===
NUM_PUT:	LD	B,0
WARI:	SUB	10
	JR	C,WATA
	INC	B
	JR	WARI
WATA:	ADD	A,10+'0'
	LD	C,A
	LD	A,B
	ADD	A,'0'
	OUT	(98H),A
	LD	A,C
	OUT	(98H),A
	RET

;=== PSG SAVE / LOAD ===
PSGOFF:	LD	A,7
	OUT	(0A0H),A	;RDPSG
	IN	A,(0A2H)
	LD	(PSG7+1),A
	LD	A,0BFH
	OUT	(0A1H),A	;WRPSG

;-SCC OFF

; PRIMARY SLOT REGISTER ONLY / DO NOT USE OTHER ESLOT IN SAME PSLOT
	IN	A,(PSLOT)
	LD	(SCCOFF1+1),A
	AND	PG2NMSK	; ~PAGE2MASK
	OR	SCCSLTP
	OUT	(PSLOT),A

	XOR	A
	LD	(SCCMIX),A

; PRIMARY SLOT REGISTER
SCCOFF1:	LD	A,0	;dummy
	OUT	(PSLOT),A
	RET

PSGON:	LD	A,7
	OUT	(0A0H),A
PSG7:	LD	A,00	;dummy
	OUT	(0A1H),A
	RET

