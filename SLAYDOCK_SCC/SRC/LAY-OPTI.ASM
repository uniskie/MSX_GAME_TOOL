;==== SUPER LAYDOCK OPTION ===
;_SAVE("LAY-OPTI

;=== KA I ZO U ===
KAIZOU:	LD	HL,KAI_FLG
STAGE:	LD	DE,KAI_DAT
	LD	A,(SEGDAT+3)
	SUB	3
	JP	NZ,DAMAGE
	OR	(HL)
	JP	NZ,STAGED
	INC	DE
STAGED:	LD	A,(DE)
	LD	(0AB6CH+1),A
	LD	(0AC77H+1),A
MONSTER:	INC	HL
	LD	DE,KAI_DAT+2
	XOR	A
	OR	(HL)
	JP	NZ,MONSTD
	INC	DE
MONSTD:	LD	A,(DE)
	LD	(0A4F6H+1),A
DAMAGE:	LD	HL,KAI_FLG+2
	LD	DE,KAI_DAT+4
	LD	A,(SEGDAT+2)
	SUB	2
	JP	NZ,KAIZOUE
	OR	(HL)
	JP	NZ,DAMAGED
	INC	DE
DAMAGED:	LD	A,(DE)
	LD	(824EH),A
	LD	(8296H),A
KAIZOUE:	RET

;=== DAIVA in SLOT (hint mode) ===
DAIVA:	LD	A,28H
	LD	(4B33H),A
	RET

KAI_FLG:	DB	255	;STAGE SELECT (0:ON/255:OFF)
	DB	255	;MONSTER
	DB	255	;NO-DAMAGE
DAIVA_F:	DB	0	;DAIVA-IN-SLOT
KAI_DAT:	DB	01,12	;STAGE SELECT (OFF:01  12:ON)
	DB	19,127	;MONSTER      (+19      +127)
	DB	05,00	;NO-DAMAGE    (DEC B     NOP)

;=== SEGMENT DATA ===
SEGDAT:	DB	00,255,255,255

;=== INTERRUPT RUTINE (MENU) ===
INTRP:
	CALL	PSGOFF
	CALL	VSAVE0
	CALL	BLINKI
	CALL	VMENU
	IN	A,(99H)
	CALL	BLKSET
	CALL	MENU_D
	CALL	P_KAIZO
	CALL	INFOECH
	CALL	CHR
	CALL	SAVE0

	CALL	MWAIT
L_INTR:	CALL	KEYIN	;D=KEYMTX NO / E=MASK

	LD	A,(KEYDAT+6)
	AND	02H	;CTRL
	JP	Z,CTRL
	LD	A,(KEYDAT+7)
	AND	28H	;TAB+BS
	CALL	Z,KILL
	LD	A,(KEYDAT+7)
	AND	10H	;STOP
	CALL	Z,E_INTR
	LD	A,(KEYDAT+5)
	AND	01H	;S:STAGE
	CALL	Z,STAG_RV
	LD	A,(KEYDAT+3)
	AND	20H	;H:HINT (DAIVA-IN-SLOT)
	CALL	Z,DAIV_RV
	LD	A,(KEYDAT+4)
	AND	04H	;M:MONSTER
	CALL	Z,MONS_RV
	LD	A,(KEYDAT+3)
	AND	02H	;D:DAMAGE
	CALL	Z,DAMA_RV
	LD	A,(KEYDAT+8)
	AND	04H	;INS:ECHO +
	CALL	Z,DELA_PL
	LD	A,(KEYDAT+8)
	AND	08H	;DEL:ECHO -
	CALL	Z,DELA_MN
	JP	L_INTR

E_INTR:	CALL	BLKEND
;       CALL  VMENU_
	CALL	VLOAD0
	CALL	BLINKI
;       CALL  MWAIT
	CALL	PSGON
	JP	INTERVE
RESTART:	CALL	BLKEND
	CALL	BLINKI
	JP	MEMINI
;-----
CTRL:	LD	A,(KEYDAT+7)
	AND	10H	;STOP
	JP	Z,RESTART
	LD	A,(KEYDAT+5)
	AND	01H	;S
	CALL	Z,SCCSET
	EI
	JP	L_INTR

;--- KILL
KILL:	LD	A,RAM0
	OUT	(MAP2),A

	XOR	A
	LD	(0E2F3H-4000H),A
	LD	(0E2FBH-4000H),A

	LD	A,RAM2
	OUT	(MAP2),A
	JP	E_INTR
;=== FLAG REVERCE ===
STAG_RV:	LD	HL,KAI_FLG
	LD	BC,KEYDAT+5
	LD	D,1
	JP	F_REVER
MONS_RV:	LD	HL,KAI_FLG+1
	LD	BC,KEYDAT+4
	LD	D,4
	JP	F_REVER
DAMA_RV:	LD	HL,KAI_FLG+2
	LD	BC,KEYDAT+3
	LD	D,2
	JP	F_REVER
DAIV_RV:	LD	HL,KAI_FLG+3
	LD	BC,KEYDAT+3
	LD	D,20H
	JP	F_REVER
F_REVER:	LD	A,(HL)
	CPL
	LD	(HL),A
	PUSH	DE
	PUSH	BC
	CALL	P_KAIZO
	CALL	KAIZOU
	POP	BC
	POP	DE
RWAIT:	CALL	KEYIN	;D=KEYMTX NO / E=MASK
	LD	A,(BC)
	AND	D
	JP	Z,RWAIT
	RET

;== ECHO + -
DELA_PL:	CALL	GETECHO
	CP	100
	JR	Z,DELAPL_
	ADD	A,10
DELAPL_:	CALL	PUTECHO
	LD	D,04H
	JR	RWAIT
DELA_MN:	CALL	GETECHO
	OR	A
	JP	Z,DELAMN_
	SUB	10
DELAMN_:	CALL	PUTECHO
	LD	D,08H
	JR	RWAIT

PUTECHO:	ADD	A,10
	LD	(HL),A
	LD	DE,4000H
	ADD	HL,DE
	LD	(HL),A
	SUB	10
	CALL	INFOECH
	LD	A,RAM2
	OUT	(MAP2),A
	LD	BC,KEYDAT+8
	RET

GETECHO:	LD	A,RAM0
	OUT	(MAP2),A
	LD	HL,(SCCECHO)
	LD	A,(HL)
	SUB	10
	RET

INFOECH:	CALL	GETECHO
	LD	C,0
L_IFECH:	SUB	10
	JR	C,P_IFECH
	INC	C
	JR	L_IFECH
P_IFECH:	LD	DE,0200H+21
	DI
	CALL	LOCATE
	LD	A,C
	CALL	NUM_PUT
	EI
	RET

;___________END

KEYDAT:	DS	9	;KEYBUFFER

M_MENUD:
	DB	'-------=== DEBUG MENU ===-------'	;*DM*
	DB	'|bank0:__|--------------        '	;*DM*
	DB	'|bank1:__||SCC DELAY:__|        '	;*DM*
	DB	'|bank2:__|| (INS/DEL)  |        '	;*DM*
	DB	'|bank3:__|--------------        '	;*DM*
	DB	'                                '	;*DM*
	DB	'      STAGE SELECT(S):__        '	;*DM*
	DB	'          MONSTER (M):__        '	;*DM*
	DB	'         NO-DAMAGE(D):__        '	;*DM*
	DB	'        DAIVA-HINT(H):__        '	;*DM*
	DB	'                                '	;*DM*
	DB	'     (STOP):return to game      '	;*DM*
	DB	'   (CTRL+STOP):restart game     '	;*DM*
	DB	'      (TAB+BS):game over        '	;*DM*
	DB	'    (CTRL+S):scc initialize     '	;*DM*
	DB	'                                '	;*DM*
	DB	ED

;=== KEY SEARCH ===
KEYIN:	LD	E,0
	LD	HL,KEYDAT
KEYIN_L:	IN	A,(KEYIO2)
	AND	0F0H
	OR	E
	OUT	(KEYIO2),A
	IN	A,(KEYIO1)
	LD	(HL),A
	INC	HL
	INC	E
	LD	A,9
	CP	E
	JP	NZ,KEYIN_L
	RET

MWAIT:	CALL	KEYIN	;D=KEYMTX NO / E=MASK
	LD	A,(KEYDAT+7)
	AND	10H
	JP	Z,MWAIT
	RET

;=== print MENU (STATUS) ===
MENU_D:	LD	HL,M_MENUD
	LD	DE,0
	DI
	CALL	LOCATE
	CALL	STR_PUT
	EI
;== PUT BANK SELECTED No. ==
	LD	HL,SEGDAT
	LD	DE,0107H
	LD	B,4
PBANK:	PUSH	BC
	DI
	CALL	LOCATE
	LD	A,(HL)
	CALL	NUM_PUT
	EI
	INC	HL
	INC	D
	POP	BC
	DJNZ	PBANK

	RET

;=== PRINT KAIZOU FLAG ===
P_KAIZO:	LD	HL,KAI_FLG
	LD	DE,0600H+21
LP_KAI:	PUSH	HL
	DI
	CALL	LOCATE
	LD	A,(HL)
	LD	HL,_ON
	OR	A
	JP	Z,P_K_ON
	LD	HL,_OFF
P_K_ON:	CALL	STR_PUT
	EI
	POP	HL
	INC	HL
	INC	D
	LD	A,D
	CP	10
	JP	NZ,LP_KAI
	RET

_ON:	DB	':ON$'	;*DM*
_OFF:	DB	'off$'	;*DM*


;=== PUT CHR 0-255 ===
CHR:	LD	DE,1000H
	DI
	CALL	LOCATE
	XOR	A
L_CHR:	OUT	(98H),A
	INC	A
	CP	255
	JP	NZ,L_CHR
	EI
	RET
;=== SPRITE BLINK SET ===
BLKSET:	LD	HL,H_KEYI
	LD	DE,OHOOK
	LD	BC,5
	LDIR

	LD	A,0C3H
	LD	HL,NHOOK
	LD	(H_KEYI),A
	LD	(H_KEYI+1),HL
;       CALL  BLINKI
	LD	HL,100H+72
	LD	(BLKCNT),HL
	XOR	A
	LD	(BLKFL2),A

	EI
	RET

OHOOK:	DS	5
;==DATA BLINK==
BLKSPR:	DB	11,03H,0	;XOR 03H R#11
BLKPAT:	DB	04,30H,3	;    04H R#4
BLKCOL:	DB	10,06H,0	;    06H R#10
BLKTXT:	DB	02,60H,6	;    60H R#2
BLKFLG:	DB	0
BLKFL2:	DB	0
BLKCNT:	DB	0
BLKTBL:	DB	0

NHOOK:	IN	A,(99H)
	CALL	TITLER

	LD	A,(BLKTBL)
	CP	1
	JP	Z,BLKTP1
	JP	NC,BLKTP2

BLK_:	LD	A,(BLKFLG)
	OR	A
	JP	NZ,BLINKI
	LD	A,(BLKFL2)
	INC	A
	LD	(BLKFL2),A
BLKCYC:	CP	1
	RET	C
	XOR	A
	LD	(BLKFL2),A
BLINKI:	LD	A,(BLKFLG)
	XOR	255
	LD	(BLKFLG),A
	LD	HL,BLKSPR
BLKTYP:	LD	BC,400H+99H	;+2:LOOP
L_BLK:	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	LD	A,(HL)
	XOR	D
	LD	(HL),A
	INC	HL
	OUT	(C),A
	LD	A,80H
	OR	E
	OUT	(C),A
	DJNZ	L_BLK
	RET

BLKTP1:	LD	A,(BLKCNT)
	DEC	A
	LD	(BLKCNT),A
	JR	Z,BTP1ED
	NEG
	ADD	A,88
	RRCA
	RRCA
	RRCA
	RRCA
	AND	0FH
;       INC   A
	LD	(BLKCYC+1),A
	JP	BLK_
BTP1ED:	LD	A,(BLKFLG)
	OR	A
	CALL	NZ,BLINKI
	LD	A,1
	LD	(BLKTYP+2),A
	LD	(BLKCYC+1),A
	XOR	A
	LD	(BLKTBL),A
	RET

BLKTP2:	LD	A,(BLKCNT)
	DEC	A
	LD	(BLKCNT),A
	JR	Z,BTP2ED
	RRCA
	RRCA
	RRCA
	AND	3
	INC	A
	LD	(BLKCYC+1),A
	JP	BLK_
BTP2ED:	LD	A,1
	LD	(BLKCYC+1),A
	XOR	A
	LD	(BLKTBL),A
	RET

;=== SPRITE BLINK RESET ===
BLKEND:	DI
	LD	A,(BLKFLG)
	OR	A
	CALL	NZ,BLINKI
	LD	A,4
	LD	(BLKTYP+2),A
	LD	HL,200H+30
	LD	(BLKCNT),HL
	XOR	A
	LD	(BLKFL2),A
	EI
L_BLKED:	LD	A,(BLKTBL)
	OR	A
	JR	NZ,L_BLKED
	DI
	LD	A,(BLKFLG)
	OR	A
	CALL	Z,BLINKI

	LD	HL,OHOOK
	LD	DE,H_KEYI
	LD	BC,5
	LDIR
	RET

;=== TITTLE SCROLL ===
TITLER:

	LD	HL,FONTS1
	LD	A,(TITLCT)
	INC	A
	CP	3
	JP	NZ,TITLE_
	LD	HL,FONTS2
	XOR	A

TITLE_:	LD	(TITLCT),A
	PUSH	HL
	LD	DE,6
	ADD	HL,DE
	LD	D,H
	LD	E,L
	INC	DE
	LD	A,(DE)
	LD	BC,7
	LDDR
	LD	(DE),A

	LD	B,8
	POP	HL
L_ROTAT:	LD	A,(HL)
	RLCA
	LD	(HL),A
	INC	HL
	DJNZ	L_ROTAT
W_TITLE:
	LD	DE,FONTS1
	LD	HL,FONTS2
	LD	BC,FONTS
	EXX
	LD	B,8
L_FNTMX:	EXX
	LD	A,(DE)
	OR	(HL)
	LD	(BC),A
	INC	HL
	INC	DE
	INC	BC
	EXX
	DJNZ	L_FNTMX

	XOR	A
	OUT	(99H),A
	LD	A,1H+40H
	OUT	(99H),A
	LD	HL,FONTS
	LD	BC,898H
	OTIR
	XOR	A
	OUT	(99H),A
	LD	A,9H+40H
	OUT	(99H),A
	LD	HL,FONTS
	LD	B,8
	OTIR
	RET

TITLCT:	DB	0
FONTS:	DS	8
FONTS1:	DB	000H,000H,000H,000H,000H,000H,008H,000H
FONTS2:	DB	000H,000H,002H,000H,000H,010H,000H,000H
