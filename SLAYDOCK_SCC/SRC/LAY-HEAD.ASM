;====== ESE-SEGMENT CHANGE ======
;( MAPPER CHANGE TRAP HEAD )
	FNAME	"LAY-HEAD.BIN"	;*BINHEAD*
;--> BIN FILE HEADER -->
	DB	0FEH	;*BINHEAD*
	DW	ORGADR	;*BINHEAD*
	DW	ENDFL-1	;*BINHEAD*
	DW	ORGADR	;*BINHEAD*
;<-- BIN FILE HEADER <--
;

;====== SLAYDOCK TOOLS COMMON LABELS ======
	INCLUDE "LAY-DEF.ASM"   ; public addres

;===================
MAIN:	EQU	_OPTION+3
MAIN0:	EQU	MAIN+0
MAIN1:	EQU	MAIN+3
MAIN2:	EQU	MAIN+6
MAIN3:	EQU	MAIN+9
MAIN4:	EQU	MAIN+12
MAIN5:	EQU	MAIN+15
MAIN6:	EQU	MAIN+18
INTRP:	EQU	MAIN+21
;===================

ORGADR:	EQU	_LAYHEAD
	ORG	ORGADR

SEGCH0:	JP	C_SEG0	;0
SEGCH1:	JP	C_SEG1	;3
SEGCH2:	JP	C_SEG2	;6
SEGCH3:	JP	C_SEG3	;9
SEGCH4:	JP	C_SEG4	;12
SEGCH5:	JP	C_SEG5	;15
SEGCH6:	JP	C_SEG6	;18
MAP_CR:	JP	CR_MAP	;21
DUMMY:	RET	;24
INTERV:	DW	TIME	;25
INTERVE:	JP	TIMERET	;27
SCCECHO:	DW	DELAY+1-4000H	;30
IFF_:	DW	IFF-4000H	;32
SCCSLTA:	DB	082H,20H,00H	; slot 2-0

C_SEG0:	CALL	MAINC
	DW	MAIN0
C_SEG1:	CALL	MAINC
	DW	MAIN1
C_SEG2:	CALL	MAINC
	DW	MAIN2
C_SEG3:	CALL	MAINC
	DW	MAIN3
C_SEG4:	CALL	MAINC
	DW	MAIN4
C_SEG5:	CALL	MAINC
	DW	MAIN5
C_SEG6:	CALL	MAINC
	DW	MAIN6

;=== CALL MAIN* ===
MAINC:	DI
;   LD    (IXRES+2),IX
;   LD    (IYRES+2),IY
	POP	IX
	EX	AF,AF'
	LD	(ARES+1),A
	LD	(SPRES+1),SP
	XOR	A
	OUT	(0FFH),A
;--- ( currentry RAM(3) ) ---
	LD	SP,_OPTION

	EXX
	PUSH	BC
;       PUSH  DE
;       PUSH  HL
	EXX
	PUSH	HL
	PUSH	DE
	PUSH	BC
	EX	AF,AF'
	PUSH	AF
	EX	DE,HL
	LD	L,(IX+0)
	LD	H,(IX+1)
	JP	(HL)

;=== RESTORE MAPPER3 ===
CR_MAP:	POP	AF
	EX	AF,AF'
	POP	BC
	POP	DE
	POP	HL
	EXX
;       POP   HL
;       POP   DE
	POP	BC
	EXX
	DI
	LD	A,3
	OUT	(0FFH),A
;--- ( currentry RAM(0) ) ---
SPRES:	LD	SP,0000H	;dummy
;IXRES   LD    IX,0000H      ;dummy
;IYRES   LD    IY,0000H      ;dummy
ARES:	LD	A,00H	;dummy
	EX	AF,AF'
IFF:	EI
	RET

;==== INTERRUPT SUB RUTINE ===
TIME:	DI
	IN	A,(KEYIO2)
	AND	0F0H
	OR	7	;(R),(D),(L),(U),DEL,INS,HOME,SPACE
	OUT	(KEYIO2),A
	IN	A,(KEYIO1)
	AND	10H	; * Push [STOP] ?

	JR	NZ,RETURN	; * No!! > RETURN

	LD	(INISP+1),SP
	XOR	A
	OUT	(0FFH),A
	LD	SP,_OPTION
	JP	INTRP

; === INTERVAL END ===
TIMERET:	DI
	LD	A,3
	OUT	(0FFH),A

INISP:	LD	SP,0000H	;dummy

RETURN:
;=== SCC PLAY ===
PSGA:	EQU	0A0H
PSGW:	EQU	0A1H
PSGR:	EQU	0A2H
SCCPLY:

; PRIMARY SLOT REGISTER ONLY / DO NOT USE OTHER ESLOT IN SAME PSLOT
	IN	A,(PSLOT)
	LD	(SLTR+1),A
	AND	PG2NMSK	; ~PAGE2MASK
	OR	SCCSLTP
	OUT	(PSLOT),A

;--- (DATADD) ---
	LD	A,(COUNT)
	LD	D,A
	ADD	A,10
DELAY:	CP	110	;10-110
	JR	C,NCCNT
	XOR	A
NCCNT:	LD	(COUNT),A
	LD	A,D

	ADD	A,40H
	LD	L,A
	LD	H,0FBH
	LD	(SCCECHA+1),HL

;--SCC PLAY
	LD	A,(HL)
	PUSH	AF	;to sccfilter
	INC	HL
	LD	DE,9880H
	LD	BC,6
	LDIR
	LD	DE,988AH
	LDI
	LDI
	LDI

SCCECHA:	LD	HL,0000H	;dummy
	LD	A,7
	OUT	(PSGA),A
	IN	A,(PSGR)
	CPL
	AND	7
	LD	(HL),A
	PUSH	AF
	INC	HL
	LD	BC,300H+PSGR
	XOR	A
L_TONE:	OUT	(PSGA),A
	IN	E,(C)
	INC	A
	OUT	(PSGA),A
	IN	D,(C)
	PUSH	DE
	LD	(HL),E
	INC	HL
	LD	(HL),D
	INC	HL
	INC	A
	DJNZ	L_TONE

VOLM:	LD	BC,800H+PSGA
	OUT	(C),B
	IN	A,(PSGR)
	BIT	4,A	; CHECK HARD ENVELOPE FLAG
	JR	Z,VOLM0
	XOR	A	; SET ZERO WHEN USE HARD ENVELOPE
VOLM0:
	LD	(988AH+3),A
	RRA
	LD	(HL),A
	INC	HL
	INC	B
	OUT	(C),B
	IN	A,(PSGR)
	BIT	4,A	; CHECK HARD ENVELOPE FLAG
	JR	Z,VOLM1
	XOR	A	; SET ZERO WHEN USE HARD ENVELOPE
VOLM1:
	RRA
	LD	(HL),A
	INC	HL
	INC	B
	OUT	(C),B
	IN	A,(PSGR)
	BIT	4,A	; CHECK HARD ENVELOPE FLAG
	JR	Z,VOLM2
	XOR	A	; SET ZERO WHEN USE HARD ENVELOPE
VOLM2:
	LD	(988AH+4),A
	RRA
	LD	(HL),A

	POP	HL
	LD	(9880H+8),HL
	POP	HL
	POP	HL
	LD	(9880H+6),HL
	POP	AF	;NOW FILLTER
	POP	DE	;DELAY FILLTER
	RLCA
	RLCA
	LD	E,A
	RLCA
	AND	8
	OR	D
	LD	D,A
	LD	A,E
	AND	10H
	OR	D
	LD	(SCCMIX),A

; PRIMARY SLOT REGISTER
SLTR:	LD	A,0	;dummy
	OUT	(PSLOT),A
	RET

COUNT:	DB	00
;=== WAVE DATA ===
WAVDAT:	EQU	0F6E4H
ENDFL:	;
